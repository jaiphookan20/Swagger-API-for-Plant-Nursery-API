---
openapi: 3.0.3
info:
  title: Api Documentation
  description: Api Documentation
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  version: "1.0"
servers:
  - url: http://localhost:8886
    description: Inferred Url
tags:
  - name: admin-controller
    description: Admin Controller
  - name: basic-error-controller
    description: Basic Error Controller
  - name: login-controller
    description: Login Controller
  - name: operation-handler
    description: Operation Handler
  - name: order-controller
    description: Order Controller
  - name: plant-controller
    description: Plant Controller
  - name: planter-controller
    description: Planter Controller
  - name: seed-controller
    description: Seed Controller
  - name: sign-up-controller
    description: Sign Up Controller
  - name: web-mvc-links-handler
    description: Web Mvc Links Handler
paths:
  "/admin/add/planter":
    post:
      tags:
        - admin-controller
      summary: addPlanter
      operationId: addPlanterUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Planter"
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Planter"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/admin/add/plants":
    post:
      tags:
        - admin-controller
      summary: addPlantHandler
      operationId: addPlantHandlerUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Plant"
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Plant"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/admin/add/seeds":
    post:
      tags:
        - admin-controller
      summary: addSeedHandler
      operationId: addSeedHandlerUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Seed"
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Seed"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/admin/allcustomers":
    get:
      tags:
        - admin-controller
      summary: showallcustomers
      operationId: showallcustomersUsingGET
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SignUpData"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/admin/delete/planter":
    delete:
      tags:
        - admin-controller
      summary: deletePlanterHandler
      operationId: deletePlanterHandlerUsingDELETE
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Planter"
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Planter"
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  "/admin/delete/plants":
    delete:
      tags:
        - admin-controller
      summary: deletePlantHandler
      operationId: deletePlantHandlerUsingDELETE
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Plant"
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Plant"
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  "/admin/delete/seeds":
    delete:
      tags:
        - admin-controller
      summary: deleteSeedHandler
      operationId: deleteSeedHandlerUsingDELETE
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Seed"
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Seed"
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  "/admin/delete/{id}":
    delete:
      tags:
        - admin-controller
      summary: deletecustomer
      operationId: deletecustomerUsingDELETE
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/SignUpData"
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  "/admin/showorders":
    get:
      tags:
        - admin-controller
      summary: viewAllOrders
      operationId: viewAllOrdersUsingGET
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Orders"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/admin/update/planter":
    put:
      tags:
        - admin-controller
      summary: updatePlanter
      operationId: updatePlanterUsingPUT
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Planter"
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Planter"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/admin/update/plants":
    put:
      tags:
        - admin-controller
      summary: updatePlantHandler
      operationId: updatePlantHandlerUsingPUT
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Plant"
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Plant"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/admin/update/seeds":
    put:
      tags:
        - admin-controller
      summary: updateSeedHandler
      operationId: updateSeedHandlerUsingPUT
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Seed"
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Seed"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/error":
    get:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingGET
      responses:
        "200":
          description: OK
          content:
            text/html:
              schema:
                "$ref": "#/components/schemas/ModelAndView"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    put:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPUT
      responses:
        "200":
          description: OK
          content:
            text/html:
              schema:
                "$ref": "#/components/schemas/ModelAndView"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    post:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPOST
      responses:
        "200":
          description: OK
          content:
            text/html:
              schema:
                "$ref": "#/components/schemas/ModelAndView"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    delete:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingDELETE
      responses:
        "200":
          description: OK
          content:
            text/html:
              schema:
                "$ref": "#/components/schemas/ModelAndView"
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    options:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingOPTIONS
      responses:
        "200":
          description: OK
          content:
            text/html:
              schema:
                "$ref": "#/components/schemas/ModelAndView"
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    head:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingHEAD
      responses:
        "200":
          description: OK
          content:
            text/html:
              schema:
                "$ref": "#/components/schemas/ModelAndView"
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    patch:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPATCH
      responses:
        "200":
          description: OK
          content:
            text/html:
              schema:
                "$ref": "#/components/schemas/ModelAndView"
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    trace:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingTRACE
      responses:
        "200":
          description: OK
          content:
            text/html:
              schema:
                "$ref": "#/components/schemas/ModelAndView"
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  "/login":
    post:
      tags:
        - login-controller
      summary: loginHandler
      operationId: loginHandlerUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LogInData"
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: string
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/logout":
    patch:
      tags:
        - login-controller
      summary: logOutFromAccount
      operationId: logOutFromAccountUsingPATCH
      parameters:
        - name: key
          in: query
          description: key
          required: true
          style: form
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: string
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  "/actuator/health":
    get:
      tags:
        - operation-handler
      summary: handle
      operationId: handleUsingGET
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/actuator/health/**":
    get:
      tags:
        - operation-handler
      summary: handle
      operationId: handleUsingGET_1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/order/addorder":
    post:
      tags:
        - order-controller
      summary: addOrder
      operationId: addOrderUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrderDTO"
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/OrderDTO2"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/order/deleteorder/{id}":
    delete:
      tags:
        - order-controller
      summary: deleteOrder
      operationId: deleteOrderUsingDELETE
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: string
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  "/order/showcustomer/{id}":
    get:
      tags:
        - order-controller
      summary: viewcustomer
      operationId: viewcustomerUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/SignUpData"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/order/showorder/{id}":
    get:
      tags:
        - order-controller
      summary: viewordersbyuserid
      operationId: viewordersbyuseridUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Orders"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/order/updateorder":
    put:
      tags:
        - order-controller
      summary: updateOrder
      operationId: updateOrderUsingPUT
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Orders"
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Orders"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/showplant/{pid}":
    get:
      tags:
        - plant-controller
      summary: getPlantByIdHandler
      operationId: getPlantByIdHandlerUsingGET
      parameters:
        - name: pid
          in: path
          description: pid
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Plant"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/showplants":
    get:
      tags:
        - plant-controller
      summary: getAllPlantsHandler
      operationId: getAllPlantsHandlerUsingGET
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Plant"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/showplants/{name}":
    get:
      tags:
        - plant-controller
      summary: getPlantByNameHandler
      operationId: getPlantByNameHandlerUsingGET
      parameters:
        - name: name
          in: path
          description: name
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Plant"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/showplantsList/{type}":
    get:
      tags:
        - plant-controller
      summary: getPlantBytypeOfPlantHandler
      operationId: getPlantBytypeOfPlantHandlerUsingGET
      parameters:
        - name: type
          in: path
          description: type
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Plant"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/getplanters/{shape}":
    get:
      tags:
        - planter-controller
      summary: viewPlanterByShape
      operationId: viewPlanterByShapeUsingGET
      parameters:
        - name: shape
          in: path
          description: shape
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Planter"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/showplanter/{id}":
    get:
      tags:
        - planter-controller
      summary: viewPlanterHandler
      operationId: viewPlanterHandlerUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Planter"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/showplanters":
    get:
      tags:
        - planter-controller
      summary: findAllPlanters
      operationId: findAllPlantersUsingGET
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Planter"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/showplanters/{minCost}/{maxCost}":
    get:
      tags:
        - planter-controller
      summary: viewPlantersByCostRange
      operationId: viewPlantersByCostRangeUsingGET
      parameters:
        - name: minCost
          in: path
          description: minCost
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: maxCost
          in: path
          description: maxCost
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Planter"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/getseeds/{name}":
    get:
      tags:
        - seed-controller
      summary: getSeedByNameHandler
      operationId: getSeedByNameHandlerUsingGET
      parameters:
        - name: name
          in: path
          description: name
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Seed"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/showseed/{pid}":
    get:
      tags:
        - seed-controller
      summary: getSeedByIdHandler
      operationId: getSeedByIdHandlerUsingGET
      parameters:
        - name: pid
          in: path
          description: pid
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Seed"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/showseeds":
    get:
      tags:
        - seed-controller
      summary: getAllSeedsHandler
      operationId: getAllSeedsHandlerUsingGET
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Seed"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/showseedsList/{type}":
    get:
      tags:
        - seed-controller
      summary: getPlantBytypeOfSeedHandler
      operationId: getPlantBytypeOfSeedHandlerUsingGET
      parameters:
        - name: type
          in: path
          description: type
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Seed"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/signUp":
    post:
      tags:
        - sign-up-controller
      summary: createNewSignUpHandler
      operationId: createNewSignUpHandlerUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SignUpData"
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/SignUpData"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/updateSignUp":
    put:
      tags:
        - sign-up-controller
      summary: updateSignUpDetailsHandler
      operationId: updateSignUpDetailsHandlerUsingPUT
      parameters:
        - name: key
          in: query
          description: key
          required: true
          style: form
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SignUpData"
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/SignUpData"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/actuator":
    get:
      tags:
        - web-mvc-links-handler
      summary: links
      operationId: linksUsingGET
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
                additionalProperties:
                  type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
components:
  schemas:
    Address:
      title: Address
      required:
        - city
        - colony
        - houseNo
      type: object
      properties:
        city:
          type: string
        colony:
          type: string
        houseNo:
          type: string
        pincode:
          type: integer
          format: int32
        state:
          type: string
    Link:
      title: Link
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    LogInData:
      title: LogInData
      required:
        - password
        - userId
        - userName
      type: object
      properties:
        password:
          type: string
        userId:
          type: integer
          format: int32
        userName:
          type: string
    ModelAndView:
      title: ModelAndView
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
            - ACCEPTED
            - ALREADY_REPORTED
            - BAD_GATEWAY
            - BAD_REQUEST
            - BANDWIDTH_LIMIT_EXCEEDED
            - CHECKPOINT
            - CONFLICT
            - CONTINUE
            - CREATED
            - DESTINATION_LOCKED
            - EXPECTATION_FAILED
            - FAILED_DEPENDENCY
            - FORBIDDEN
            - FOUND
            - GATEWAY_TIMEOUT
            - GONE
            - HTTP_VERSION_NOT_SUPPORTED
            - IM_USED
            - INSUFFICIENT_SPACE_ON_RESOURCE
            - INSUFFICIENT_STORAGE
            - INTERNAL_SERVER_ERROR
            - I_AM_A_TEAPOT
            - LENGTH_REQUIRED
            - LOCKED
            - LOOP_DETECTED
            - METHOD_FAILURE
            - METHOD_NOT_ALLOWED
            - MOVED_PERMANENTLY
            - MOVED_TEMPORARILY
            - MULTIPLE_CHOICES
            - MULTI_STATUS
            - NETWORK_AUTHENTICATION_REQUIRED
            - NON_AUTHORITATIVE_INFORMATION
            - NOT_ACCEPTABLE
            - NOT_EXTENDED
            - NOT_FOUND
            - NOT_IMPLEMENTED
            - NOT_MODIFIED
            - NO_CONTENT
            - OK
            - PARTIAL_CONTENT
            - PAYLOAD_TOO_LARGE
            - PAYMENT_REQUIRED
            - PERMANENT_REDIRECT
            - PRECONDITION_FAILED
            - PRECONDITION_REQUIRED
            - PROCESSING
            - PROXY_AUTHENTICATION_REQUIRED
            - REQUESTED_RANGE_NOT_SATISFIABLE
            - REQUEST_ENTITY_TOO_LARGE
            - REQUEST_HEADER_FIELDS_TOO_LARGE
            - REQUEST_TIMEOUT
            - REQUEST_URI_TOO_LONG
            - RESET_CONTENT
            - SEE_OTHER
            - SERVICE_UNAVAILABLE
            - SWITCHING_PROTOCOLS
            - TEMPORARY_REDIRECT
            - TOO_EARLY
            - TOO_MANY_REQUESTS
            - UNAUTHORIZED
            - UNAVAILABLE_FOR_LEGAL_REASONS
            - UNPROCESSABLE_ENTITY
            - UNSUPPORTED_MEDIA_TYPE
            - UPGRADE_REQUIRED
            - URI_TOO_LONG
            - USE_PROXY
            - VARIANT_ALSO_NEGOTIATES
        view:
          "$ref": "#/components/schemas/View"
        viewName:
          type: string
    OrderDTO:
      title: OrderDTO
      type: object
      properties:
        plantId:
          type: integer
          format: int32
        planterId:
          type: integer
          format: int32
        seedId:
          type: integer
          format: int32
        transactionMode:
          type: string
        userid:
          type: integer
          format: int32
    OrderDTO2:
      title: OrderDTO2
      type: object
      properties:
        localdate:
          type: string
          format: date
        orderId:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
        totalcost:
          type: integer
          format: int32
        transactionMode:
          type: string
    Orders:
      title: Orders
      required:
        - transactionMode
        - userid
      type: object
      properties:
        localDate:
          type: string
          format: date
        orderId:
          type: integer
          format: int32
        planters:
          type: array
          items:
            "$ref": "#/components/schemas/Planter"
        plants:
          type: array
          items:
            "$ref": "#/components/schemas/Plant"
        quantity:
          type: integer
          format: int32
        seeds:
          type: array
          items:
            "$ref": "#/components/schemas/Seed"
        totalCost:
          type: integer
          format: int32
        transactionMode:
          type: string
        userid:
          type: integer
          format: int32
    Plant:
      title: Plant
      required:
        - difficultyLevel
        - plantHeight
        - plantSpread
        - plantsCost
        - plantsStock
        - typeOfPlant
      type: object
      properties:
        bloomTime:
          type: string
        commonName:
          type: string
        difficultyLevel:
          type: string
        medicinalUse:
          type: string
        plantDescription:
          type: string
        plantHeight:
          type: integer
          format: int32
        plantId:
          type: integer
          format: int32
        plantSpread:
          type: string
        plantsCost:
          type: integer
          format: int32
        plantsStock:
          type: integer
          format: int32
        temperature:
          type: string
        typeOfPlant:
          type: string
    Planter:
      title: Planter
      required:
        - planterColor
        - planterShape
      type: object
      properties:
        drinageHoles:
          type: integer
          format: int32
        planterCapacity:
          type: integer
          format: int32
        planterColor:
          type: string
        planterCost:
          type: integer
          format: int32
        planterId:
          type: integer
          format: int32
        planterShape:
          type: string
        planterStock:
          type: integer
          format: int32
        planterheight:
          minimum: 1
          exclusiveMinimum: false
          type: number
          format: float
        plants:
          type: array
          items:
            "$ref": "#/components/schemas/Plant"
        seeds:
          type: array
          items:
            "$ref": "#/components/schemas/Seed"
    Seed:
      title: Seed
      required:
        - difficultyLevel
        - seedsCost
        - seedsStock
        - seedsperiPacket
        - typeOfSeeds
      type: object
      properties:
        bloomTime:
          type: string
        commonName:
          type: string
        difficultyLevel:
          type: string
        seedId:
          type: integer
          format: int32
        seedsCost:
          type: integer
          format: int32
        seedsDescription:
          type: string
        seedsStock:
          type: integer
          format: int32
        seedsperiPacket:
          type: integer
          format: int32
        temperature:
          type: string
        typeOfSeeds:
          type: string
        watering:
          type: string
    SignUpData:
      title: SignUpData
      required:
        - email
        - mobileNo
        - password
        - userName
      type: object
      properties:
        address:
          "$ref": "#/components/schemas/Address"
        email:
          type: string
        mobileNo:
          pattern: "[0-9]{10}"
          type: string
        password:
          pattern: "[a-zA-Z0-9]{6,12}"
          type: string
        userId:
          type: integer
          format: int32
        userName:
          pattern: "[a-z]{6,12}"
          type: string
    View:
      title: View
      type: object
      properties:
        contentType:
          type: string
